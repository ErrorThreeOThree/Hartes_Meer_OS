#ifndef ADDRESSES_H
#define ADDRESSES_H

#define THREAD_AMOUNT 33
#define GPIO_OFFSET (0x3F000000)
#define GPIO_BASE_ADDR	0x7e000000
#define GPIO_END_ADDR	0x7effffff
#define UART_BASE (0x7E201000 - GPIO_OFFSET)
#define INTERRUPT_BASE (0x7E00B000 - GPIO_OFFSET)
#define INTERRUPT_CTR_BASE (INTERRUPT_BASE + 0x200)
#define TIMER_ARM_BASE (INTERRUPT_BASE + 0x400)
#define RAM_END		0x8000000
#define STACK_SIZE	0x100000
#define SUPER_REAL_SP	(RAM_END)
#define UDI_REAL_SP	(SUPER_REAL_SP - STACK_SIZE)
#define SYSTEM_REAL_SP	(UDI_REAL_SP - STACK_SIZE)
#define IRQ_REAL_SP	(SYSTEM_REAL_SP - STACK_SIZE)
#define FIQ_REAL_SP	(IRQ_REAL_SP - STACK_SIZE)
#define ABORT_REAL_SP	(FIQ_REAL_SP - STACK_SIZE)
#define THREAD_REAL_SP(X)	(ABORT_REAL_SP-STACK_SIZE*(1+X))

#define SP_BASE		(RAM_END)
#define ABORT_SP	(SP_BASE + 2*STACK_SIZE)
#define FIQ_SP		(ABORT_SP + 2*STACK_SIZE)
#define IRQ_SP		(FIQ_SP + 2*STACK_SIZE)
#define SYSTEM_SP	(IRQ_SP + 2*STACK_SIZE)
#define UDI_SP		(SYSTEM_SP + 2*STACK_SIZE)
#define SUPER_SP	(UDI_SP + 2*STACK_SIZE)

#define THREAD_SP(X)	(SUPER_SP+2*STACK_SIZE*(X+1))
#define IDLE_THREAD_SP	(THREAD_BASE_ADDRESS - THREAD_AMOUNT * THREAD_STACK_SIZE)


#endif
